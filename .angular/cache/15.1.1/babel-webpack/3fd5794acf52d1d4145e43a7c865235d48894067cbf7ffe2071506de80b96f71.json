{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { GenreRequest } from \"../../model/GenreRequest\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/genre/genre.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GenreFormComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const g_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(g_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(g_r1.name);\n  }\n}\nexport class GenreFormComponent {\n  constructor(service, cd) {\n    this.service = service;\n    this.cd = cd;\n    this.genres = [];\n    this.genreForm = new FormGroup({\n      name: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n  }\n  getGenres() {\n    this.service.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    });\n  }\n  submit() {\n    if (this.genreForm.valid) {\n      console.log(this.genreForm.value.name);\n      this.service.addGenre(new GenreRequest(this.genreForm.value.name)).subscribe(value => {\n        console.log('Success: Created genre');\n        console.log(value);\n        this.getGenres();\n      });\n      this.genreForm.reset();\n    }\n  }\n}\nGenreFormComponent.ɵfac = function GenreFormComponent_Factory(t) {\n  return new (t || GenreFormComponent)(i0.ɵɵdirectiveInject(i1.GenreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nGenreFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GenreFormComponent,\n  selectors: [[\"app-genre-form\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function GenreFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function GenreFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Nazov zanru: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Pridaj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"table\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Nazov\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, GenreFormComponent_tr_16_Template, 5, 2, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.genreForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:1px solid;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{text-align:center;padding:10px}table[_ngcontent-%COMP%]{margin:5px}\"],\n  changeDetection: 0\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}