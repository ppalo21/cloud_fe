{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { CdRequest } from \"../../model/CdRequest\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/cd/cd.service\";\nimport * as i2 from \"../../service/genre/genre.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CdFormComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", g_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(g_r2.name);\n  }\n}\nfunction CdFormComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.genreName);\n  }\n}\nexport class CdFormComponent {\n  constructor(cdService, genreService, cd) {\n    this.cdService = cdService;\n    this.genreService = genreService;\n    this.cd = cd;\n    this.genres = [];\n    this.cds = [];\n    this.cdForm = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      author: new FormControl(null, Validators.required),\n      genreId: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n    this.getCds();\n  }\n  getCds() {\n    this.cdService.getAllCds().subscribe(data => {\n      this.cds = data;\n      this.cd.detectChanges();\n    });\n  }\n  getGenres() {\n    this.genreService.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    });\n  }\n  submit() {\n    if (this.cdForm.valid) {\n      let request = new CdRequest(this.cdForm.value.name, this.cdForm.value.author, this.cdForm.value.genreId);\n      this.cdService.addCd(request).subscribe(value => {\n        console.log('Success: Created cd');\n        console.log(value);\n        this.getCds();\n        this.getGenres();\n      });\n      this.cdForm.reset();\n    }\n  }\n}\nCdFormComponent.ɵfac = function CdFormComponent_Factory(t) {\n  return new (t || CdFormComponent)(i0.ɵɵdirectiveInject(i1.CdService), i0.ɵɵdirectiveInject(i2.GenreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nCdFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CdFormComponent,\n  selectors: [[\"app-cd-form\"]],\n  decls: 32,\n  vars: 3,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"author\"], [\"formControlName\", \"author\", \"id\", \"author\", \"type\", \"text\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\"], [\"for\", \"genreId\"], [\"formControlName\", \"genreId\", \"id\", \"genreId\", 3, \"click\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CdFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CdFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Autor: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Nazov: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5)(10, \"br\")(11, \"br\");\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Zaner: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 7);\n      i0.ɵɵlistener(\"click\", function CdFormComponent_Template_select_click_14_listener() {\n        return ctx.getGenres();\n      });\n      i0.ɵɵtemplate(15, CdFormComponent_option_15_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵtext(19, \"Pridaj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"table\")(22, \"tr\")(23, \"th\");\n      i0.ɵɵtext(24, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Autor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Nazov\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Zaner\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, CdFormComponent_tr_31_Template, 9, 4, \"tr\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.cdForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cds);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:1px solid;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{text-align:center;padding:10px}table[_ngcontent-%COMP%]{margin:5px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}