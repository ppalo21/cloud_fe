{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { GenreRequest } from \"../../model/GenreRequest\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/genre/genre.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GenreFormComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const g_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(g_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(g_r1.name);\n  }\n}\nexport class GenreFormComponent {\n  constructor(service, cd) {\n    this.service = service;\n    this.cd = cd;\n    this.genres = [];\n    this.genreForm = new FormGroup({\n      name: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n  }\n  getGenres() {\n    this.service.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    });\n  }\n  submit() {\n    if (this.genreForm.valid) {\n      console.log(this.genreForm.value.name);\n      this.service.addGenre(new GenreRequest(this.genreForm.value.name)).subscribe(value => {\n        console.log('Success: Created genre');\n        console.log(value);\n        this.getGenres();\n      });\n      this.genreForm.reset();\n    }\n  }\n}\nGenreFormComponent.ɵfac = function GenreFormComponent_Factory(t) {\n  return new (t || GenreFormComponent)(i0.ɵɵdirectiveInject(i1.GenreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nGenreFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GenreFormComponent,\n  selectors: [[\"app-genre-form\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function GenreFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function GenreFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Nazov zanru: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Pridaj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"table\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Nazov\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, GenreFormComponent_tr_16_Template, 5, 2, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.genreForm);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  margin: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZS9nZW5yZS1mb3JtL2dlbnJlLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOzs7O0FBSUE7RUFDRSxXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSwgdGgsIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG5cclxuXHJcbnRhYmxlIHtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AACjE,SAAQC,YAAY,QAAO,0BAA0B;;;;;;;ICajDC,0BAA6B;IACvBA,YAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IAAAA,YAAU;IAAAA,iBAAK;;;;IADfA,eAAQ;IAARA,6BAAQ;IACRA,eAAU;IAAVA,+BAAU;;;ADLpB,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,OAAqB,EAAUC,EAAqB;IAApD,YAAO,GAAPD,OAAO;IAAwB,OAAE,GAAFC,EAAE;IAFrD,WAAM,GAAY,EAAE;IAGlB,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAM;MAClCS,IAAI,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACS,QAAQ;KAChD,CAAC;IACF,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,IAAI,CAACL,OAAO,CAACM,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC3C,IAAI,CAACC,MAAM,GAAGD,IAAI;MAClB,IAAI,CAACP,EAAE,CAACS,aAAa,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJ,IAAG,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,SAAS,CAACa,KAAK,CAACZ,IAAI,CAAC;MACtC,IAAI,CAACH,OAAO,CAACgB,QAAQ,CAAC,IAAIpB,YAAY,CAAC,IAAI,CAACM,SAAS,CAACa,KAAK,CAACZ,IAAI,CAAC,CAAC,CAACI,SAAS,CAACQ,KAAK,IAAG;QACnFF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QAClB,IAAI,CAACV,SAAS,EAAE;MAClB,CAAC,CAAC;MACF,IAAI,CAACH,SAAS,CAACe,KAAK,EAAE;;EAE1B;;AA9BWnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BzB,8BAAuB;MACSA;QAAA,OAAY0B,YAAQ;MAAA,EAAC;MACjD1B,gCAAkB;MAAAA,6BAAa;MAAAA,iBAAQ;MACvCA,2BAAoD;MAEpDA,iCAAsB;MAAAA,sBAAM;MAAAA,iBAAS;MAGvCA,qBAAI;MAEJA,8BAAO;MAECA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MAEhBA,mEAGK;MACPA,iBAAQ;;;MAlBFA,eAAuB;MAAvBA,yCAAuB;MAcTA,gBAAS;MAATA,oCAAS","names":["FormControl","FormGroup","Validators","GenreRequest","i0","GenreFormComponent","constructor","service","cd","genreForm","name","required","getGenres","getAllGenres","subscribe","data","genres","detectChanges","submit","valid","console","log","value","addGenre","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ppavl\\Downloads\\cloud_fe\\src\\app\\feature\\genre-form\\genre-form.component.ts","C:\\Users\\ppavl\\Downloads\\cloud_fe\\src\\app\\feature\\genre-form\\genre-form.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, ChangeDetectorRef, Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {GenreRequest} from \"../../model/GenreRequest\";\nimport {GenreService} from \"../../service/genre/genre.service\";\nimport {Genre} from \"../../model/Genre\";\n\n@Component({\n  selector: 'app-genre-form',\n  templateUrl: './genre-form.component.html',\n  styleUrls: ['./genre-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GenreFormComponent {\n\n  genreForm: FormGroup;\n\n  genres: Genre[] = []\n\n  constructor(private service: GenreService, private cd: ChangeDetectorRef) {\n    this.genreForm = new FormGroup<any>({\n      name: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n  }\n\n  getGenres(): void {\n    this.service.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    })\n  }\n\n  submit(): void {\n    if(this.genreForm.valid) {\n      console.log(this.genreForm.value.name);\n      this.service.addGenre(new GenreRequest(this.genreForm.value.name)).subscribe(value =>  {\n        console.log('Success: Created genre');\n        console.log(value);\n        this.getGenres();\n      });\n      this.genreForm.reset();\n    }\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"genreForm\" (ngSubmit)=\"submit()\">\n    <label for=\"name\">Nazov zanru: </label>\n    <input formControlName=\"name\" id=\"name\" type=\"text\">\n    <br><br>\n    <button type=\"submit\">Pridaj</button>\n  </form>\n\n  <br>\n\n  <table>\n    <tr>\n      <th>ID</th>\n      <th>Nazov</th>\n    </tr>\n    <tr *ngFor=\"let g of genres\">\n      <td>{{g.id}}</td>\n      <td>{{g.name}}</td>\n    </tr>\n  </table>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}