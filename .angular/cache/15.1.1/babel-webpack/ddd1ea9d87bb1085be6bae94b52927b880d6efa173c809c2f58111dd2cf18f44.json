{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { CdRequest } from \"../../model/CdRequest\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/cd/cd.service\";\nimport * as i2 from \"../../service/genre/genre.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CdFormComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", g_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(g_r2.name);\n  }\n}\nfunction CdFormComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r3.genreName);\n  }\n}\nexport class CdFormComponent {\n  constructor(cdService, genreService, cd) {\n    this.cdService = cdService;\n    this.genreService = genreService;\n    this.cd = cd;\n    this.genres = [];\n    this.cds = [];\n    this.cdForm = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      author: new FormControl(null, Validators.required),\n      genreId: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n    this.getCds();\n  }\n  getCds() {\n    this.cdService.getAllCds().subscribe(data => {\n      this.cds = data;\n      this.cd.detectChanges();\n    });\n  }\n  getGenres() {\n    this.genreService.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    });\n  }\n  submit() {\n    if (this.cdForm.valid) {\n      let request = new CdRequest(this.cdForm.value.name, this.cdForm.value.author, this.cdForm.value.genreId);\n      this.cdService.addCd(request).subscribe(value => {\n        console.log('Success: Created cd');\n        console.log(value);\n        this.getCds();\n        this.getGenres();\n      });\n      this.cdForm.reset();\n    }\n  }\n}\nCdFormComponent.ɵfac = function CdFormComponent_Factory(t) {\n  return new (t || CdFormComponent)(i0.ɵɵdirectiveInject(i1.CdService), i0.ɵɵdirectiveInject(i2.GenreService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nCdFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CdFormComponent,\n  selectors: [[\"app-cd-form\"]],\n  decls: 32,\n  vars: 3,\n  consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"author\"], [\"formControlName\", \"author\", \"id\", \"author\", \"type\", \"text\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\"], [\"for\", \"genreId\"], [\"formControlName\", \"genreId\", \"id\", \"genreId\", 3, \"click\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CdFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CdFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Autor: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3)(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Nazov: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5)(10, \"br\")(11, \"br\");\n      i0.ɵɵelementStart(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Zaner: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 7);\n      i0.ɵɵlistener(\"click\", function CdFormComponent_Template_select_click_14_listener() {\n        return ctx.getGenres();\n      });\n      i0.ɵɵtemplate(15, CdFormComponent_option_15_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"button\", 9);\n      i0.ɵɵtext(19, \"Pridaj\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"table\")(22, \"tr\")(23, \"th\");\n      i0.ɵɵtext(24, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Autor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Nazov\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Zaner\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, CdFormComponent_tr_31_Template, 9, 4, \"tr\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.cdForm);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.genres);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cds);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  margin: 5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZS9jZC1mb3JtL2NkLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOzs7O0FBSUE7RUFDRSxXQUFXO0FBQ2IiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSwgdGgsIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG50aCwgdGQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG5cclxuXHJcbnRhYmxlIHtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AAMjE,SAAQC,SAAS,QAAO,uBAAuB;;;;;;;;ICKzCC,kCAAkD;IAAAA,YAAU;IAAAA,iBAAS;;;;IAApCA,0CAAgB;IAACA,eAAU;IAAVA,+BAAU;;;;;IAe9DA,0BAA0B;IACpBA,YAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IAAAA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;;;;IAHpBA,eAAQ;IAARA,6BAAQ;IACRA,eAAY;IAAZA,iCAAY;IACZA,eAAU;IAAVA,+BAAU;IACVA,eAAe;IAAfA,oCAAe;;;ADjBzB,OAAM,MAAOC,eAAe;EAQ1BC,YAAoBC,SAAoB,EAAUC,YAA0B,EAAUC,EAAqB;IAAvF,cAAS,GAATF,SAAS;IAAqB,iBAAY,GAAZC,YAAY;IAAwB,OAAE,GAAFC,EAAE;IAJxF,WAAM,GAAY,EAAE;IAEpB,QAAG,GAAS,EAAE;IAGZ,IAAI,CAACC,MAAM,GAAG,IAAIT,SAAS,CAAM;MAC/BU,IAAI,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACU,QAAQ,CAAC;MAChDC,MAAM,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACU,QAAQ,CAAC;MAClDE,OAAO,EAAE,IAAId,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACU,QAAQ;KACnD,CAAC;IACF,IAAI,CAACG,SAAS,EAAE;IAChB,IAAI,CAACC,MAAM,EAAE;EACf;EAEAA,MAAM;IACJ,IAAI,CAACT,SAAS,CAACU,SAAS,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1C,IAAI,CAACC,GAAG,GAAGD,IAAI;MACf,IAAI,CAACV,EAAE,CAACY,aAAa,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAN,SAAS;IACP,IAAI,CAACP,YAAY,CAACc,YAAY,EAAE,CAACJ,SAAS,CAACC,IAAI,IAAG;MAChD,IAAI,CAACI,MAAM,GAAGJ,IAAI;MAClB,IAAI,CAACV,EAAE,CAACY,aAAa,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAG,MAAM;IACJ,IAAG,IAAI,CAACd,MAAM,CAACe,KAAK,EAAE;MACpB,IAAIC,OAAO,GAAc,IAAIvB,SAAS,CAAC,IAAI,CAACO,MAAM,CAACiB,KAAK,CAAChB,IAAI,EAAE,IAAI,CAACD,MAAM,CAACiB,KAAK,CAACd,MAAM,EAAE,IAAI,CAACH,MAAM,CAACiB,KAAK,CAACb,OAAO,CAAC;MACnH,IAAI,CAACP,SAAS,CAACqB,KAAK,CAACF,OAAO,CAAC,CAACR,SAAS,CAACS,KAAK,IAAG;QAC9CE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCD,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;QAClB,IAAI,CAACX,MAAM,EAAE;QACb,IAAI,CAACD,SAAS,EAAE;MAClB,CAAC,CAAC;MACF,IAAI,CAACL,MAAM,CAACqB,KAAK,EAAE;;EAEvB;;AA3CW1B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd5BhC,8BAAuB;MACMA;QAAA,OAAYiC,YAAQ;MAAA,EAAC;MAC9CjC,gCAAoB;MAAAA,uBAAO;MAAAA,iBAAQ;MACnCA,2BAAwD;MAGxDA,gCAAkB;MAAAA,uBAAO;MAAAA,iBAAQ;MACjCA,2BAAoD;MAGpDA,iCAAqB;MAAAA,wBAAO;MAAAA,iBAAQ;MACpCA,kCAAqE;MAA7DA;QAAA,OAASiC,eAAW;MAAA,EAAC;MAC3BjC,wEAAqE;MACvEA,iBAAS;MACTA,sBAAI;MACJA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;MAGvCA,sBAAI;MAEJA,8BAAO;MAECA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MAEhBA,iEAKK;MACPA,iBAAQ;;;MAhCFA,eAAoB;MAApBA,sCAAoB;MAWAA,gBAAS;MAATA,oCAAS;MAefA,gBAAM;MAANA,iCAAM","names":["FormControl","FormGroup","Validators","CdRequest","i0","CdFormComponent","constructor","cdService","genreService","cd","cdForm","name","required","author","genreId","getGenres","getCds","getAllCds","subscribe","data","cds","detectChanges","getAllGenres","genres","submit","valid","request","value","addCd","console","log","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ppavl\\Downloads\\cloud_fe\\src\\app\\feature\\cd-form\\cd-form.component.ts","C:\\Users\\ppavl\\Downloads\\cloud_fe\\src\\app\\feature\\cd-form\\cd-form.component.html"],"sourcesContent":["import {ChangeDetectorRef, Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Genre} from \"../../model/Genre\";\nimport {GenreService} from \"../../service/genre/genre.service\";\nimport {GenreRequest} from \"../../model/GenreRequest\";\nimport {CdService} from \"../../service/cd/cd.service\";\nimport {Cd} from \"../../model/Cd\";\nimport {CdRequest} from \"../../model/CdRequest\";\n\n@Component({\n  selector: 'app-cd-form',\n  templateUrl: './cd-form.component.html',\n  styleUrls: ['./cd-form.component.css']\n})\nexport class CdFormComponent {\n\n  cdForm: FormGroup;\n\n  genres: Genre[] = []\n\n  cds: Cd[] = [];\n\n  constructor(private cdService: CdService, private genreService: GenreService, private cd: ChangeDetectorRef) {\n    this.cdForm = new FormGroup<any>({\n      name: new FormControl(null, Validators.required),\n      author: new FormControl(null, Validators.required),\n      genreId: new FormControl(null, Validators.required)\n    });\n    this.getGenres();\n    this.getCds();\n  }\n\n  getCds(): void {\n    this.cdService.getAllCds().subscribe(data => {\n      this.cds = data;\n      this.cd.detectChanges();\n    })\n  }\n\n  getGenres(): void {\n    this.genreService.getAllGenres().subscribe(data => {\n      this.genres = data;\n      this.cd.detectChanges();\n    })\n  }\n\n  submit(): void {\n    if(this.cdForm.valid) {\n      let request: CdRequest = new CdRequest(this.cdForm.value.name, this.cdForm.value.author, this.cdForm.value.genreId);\n      this.cdService.addCd(request).subscribe(value =>  {\n        console.log('Success: Created cd');\n        console.log(value);\n        this.getCds();\n        this.getGenres();\n      });\n      this.cdForm.reset();\n    }\n  }\n\n}\n","<div class=\"container\">\n  <form [formGroup]=\"cdForm\" (ngSubmit)=\"submit()\">\n    <label for=\"author\">Autor: </label>\n    <input formControlName=\"author\" id=\"author\" type=\"text\">\n    <br><br>\n\n    <label for=\"name\">Nazov: </label>\n    <input formControlName=\"name\" id=\"name\" type=\"text\">\n    <br><br>\n\n    <label for=\"genreId\">Zaner: </label>\n    <select (click)=\"getGenres()\" formControlName=\"genreId\" id=\"genreId\">\n      <option *ngFor=\"let g of genres\" value=\"{{g.id}}\">{{g.name}}</option>\n    </select>\n    <br><br>\n    <button type=\"submit\">Pridaj</button>\n  </form>\n\n  <br>\n\n  <table>\n    <tr>\n      <th>ID</th>\n      <th>Autor</th>\n      <th>Nazov</th>\n      <th>Zaner</th>\n    </tr>\n    <tr *ngFor=\"let c of cds\">\n      <td>{{c.id}}</td>\n      <td>{{c.author}}</td>\n      <td>{{c.name}}</td>\n      <td>{{c.genreName}}</td>\n    </tr>\n  </table>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}